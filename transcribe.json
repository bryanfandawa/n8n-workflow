{
  "nodes": [
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "include": "specifiedFields",
        "fieldsToInclude": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3100,
        1020
      ],
      "id": "373dfe38-eedc-4770-a4c4-01e21ac55cd5",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "25e0cddd-eef1-4fc4-abad-a98a09ae05d4",
              "name": "combined",
              "value": "={{ $json.data.map(d => d.data).join('\\n\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3320,
        1020
      ],
      "id": "c901477d-63dd-41b0-9309-cf1af2b50232",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional transcription formatter. Your task is to take a raw sermon transcript and clean it up for readability and presentation. Please do the following:\n\n1. Add appropriate paragraph breaks for each new idea or speaker shift.\n2. Ensure the text is well-structured and easy to read.\n3. Fix punctuation, capitalization, and spacing where needed.\n4. Format the transcript with proper sentence flow — no run-ons or fragmented text.\n5. Do NOT change the speaker’s original message or meaning.\n\nOutput the transcript as neatly formatted plain text, ready to be published on a blog. The formatting should be visually neat and justified, but the output should remain plain text.\n\nHere is the transcript:\n\n\"\"\"\n{{ $json.combined }}\n\"\"\"",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        3560,
        1020
      ],
      "id": "d0777587-b648-4230-8da5-8b9d5ee08c94",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3580,
        1180
      ],
      "id": "0854600e-7bb1-4b62-9b68-86ba872c40b6",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "rROhGggv3UKdDt8C",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4020,
        1360
      ],
      "id": "c911bb45-a828-4fe5-88fc-57eae38cb61a",
      "name": "HTTP Request3",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        1360
      ],
      "id": "fc423538-f928-480e-9227-d4eb90e89585",
      "name": "Get Docs File",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const doc = items[0].json;\nconst content = doc.body.content;\n\nlet updates = [];\n\nfor (const block of content) {\n  if (!block.paragraph || !block.paragraph.elements) continue;\n\n  const startIndex = block.startIndex;\n  const endIndex = block.endIndex;\n\n  // Push text style update for this entire paragraph block\n  updates.push({\n    updateTextStyle: {\n      range: {\n        startIndex,\n        endIndex\n      },\n      textStyle: {\n        fontSize: {\n          magnitude: 12,\n          unit: 'PT'\n        },\n        weightedFontFamily: {\n          fontFamily: 'Times New Roman'\n        }\n      },\n      fields: 'fontSize,weightedFontFamily'\n    }\n  });\n\n  // Push paragraph alignment update\n  updates.push({\n    updateParagraphStyle: {\n      range: {\n        startIndex,\n        endIndex\n      },\n      paragraphStyle: {\n        alignment: 'JUSTIFIED'\n      },\n      fields: 'alignment'\n    }\n  });\n}\n\nreturn [{ json: { requests: updates } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3560,
        1360
      ],
      "id": "5a5a7e8f-5bdc-42a0-babc-50d52dd4efd1",
      "name": "Reformat docs file"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}:batchUpdate",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ { \"requests\": $json.requests } }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3780,
        1360
      ],
      "id": "114f051a-a649-4bec-9369-4e0d3e655d8c",
      "name": "Update docs using the code node",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const content = items[0].json.body.content;\nlet html = '';\n\nfor (const block of content) {\n  if (!block.paragraph || !block.paragraph.elements) continue;\n\n  for (const el of block.paragraph.elements) {\n    const run = el.textRun;\n    if (!run || !run.content) continue;\n\n    const isBold = run.textStyle?.bold;\n    const text = run.content;\n\n    html += isBold ? `<strong>${text}</strong>` : text;\n  }\n\n  html += '<br>'; // New paragraph\n}\n\nreturn [{ json: { summaryHtml: html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        1360
      ],
      "id": "8371d2ff-c3ee-42ba-8a0d-63edfbefdc3b",
      "name": "Code"
    },
    {
      "parameters": {
        "command": "ls -lh /home/node\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1780,
        1000
      ],
      "id": "98060465-daa4-4c21-a82a-638b2294dfc1",
      "name": "List the files downloaded"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c7ca32b9-23ce-441c-be1f-2e273c56102b",
              "name": "paths",
              "value": "={{ \n  $json[\"stdout\"]\n    .split(\"\\n\")\n    .filter(p => p.includes(\"part_\") && p.trim() !== \"\")\n    .map(p => \"/home/node/\" + p.trim().split(\" \").pop())\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2000,
        1000
      ],
      "id": "b1104204-4994-4016-b425-903aad7aff65",
      "name": "Make an array"
    },
    {
      "parameters": {
        "fieldToSplitOut": "paths",
        "options": {
          "destinationFieldName": "path"
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2200,
        1000
      ],
      "id": "36c93234-7354-4c41-86f2-02bfeb1d7a55",
      "name": "splits array into individual item",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.path }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2400,
        1000
      ],
      "id": "eae689c9-dce9-474b-aaf9-715c322912aa",
      "name": "read mp3 as binary"
    },
    {
      "parameters": {
        "url": "={{ $('Extract URL').item.json.audioUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        1200
      ],
      "id": "1b994ce7-971b-4340-8ce1-3e8dd30c58fb",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "fileSelector": "/home/node/output.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2400,
        1200
      ],
      "id": "b3636bf6-5552-4133-b649-d1a7cafc0550",
      "name": "read mp3 as binary2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ",
          "mode": "list",
          "cachedResultName": "Wordpress_Church Content",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ID": "={{ $json.id }}",
            "Audio Link": "={{ $json.audioUrl }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Audio Link",
              "displayName": "Audio Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Check?",
              "displayName": "Check?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        160,
        1160
      ],
      "id": "bf291935-54c0-457d-b109-b3d08d6dc32f",
      "name": "Update Information to Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9Iz8UnWy2maW1Bl5",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json['Audio Link'] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Range",
              "value": "bytes=0-0"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        400,
        1160
      ],
      "id": "b5acf674-8966-4a5a-b4db-c0f7a58c8862",
      "name": "Get File Information"
    },
    {
      "parameters": {
        "jsCode": "const headers = $json.headers || $json.data?.headers || {};\nconst contentRange = headers['content-range'];\n\nif (!contentRange) {\n  throw new Error(\"Missing content-range header\");\n}\n\nconst totalSizeBytes = parseInt(contentRange.split('/')[1]);\nconst sizeMB = totalSizeBytes / (1024 * 1024);\n\nreturn [\n  {\n    json: {\n      sizeBytes: totalSizeBytes,\n      sizeMB: sizeMB\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        1160
      ],
      "id": "e28b5d80-87d0-4202-a05a-c60c158a1d77",
      "name": "Get File Size"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f065a6b7-13e0-4005-80c4-b0e9c0f63568",
              "leftValue": "={{ $json.sizeMB }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        1160
      ],
      "id": "a0724b37-d441-404a-94a1-8b60d750862c",
      "name": "Is file bigger than 5mb?"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ",
          "mode": "list",
          "cachedResultName": "Wordpress_Church Content",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10feapF6U16OD9QJZ-4DOeHAimgDiVaRhdzU1_zSQ0HQ/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1320,
        1000
      ],
      "id": "d509ec06-6a64-46af-9f4f-0d317f867770",
      "name": "Get Audio URL",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bZIdcy3IAgcQLztH",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "command": "=ffmpeg -hide_banner -loglevel error -user_agent \"Mozilla/5.0\" -i \"{{ $json['Audio Link'] }}\" -f segment -segment_time 300 -c copy /home/node/part_%03d.mp3"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1540,
        1000
      ],
      "id": "08191870-4d31-4545-b2f4-6239a4a7d300",
      "name": "Cut into chunks and compress"
    },
    {
      "parameters": {
        "folderId": "1MulPPZJBPqNqFPJQnEMJINx6lF-spVc_",
        "title": "=Sermon_{{ $now.format(\"YYYY-MM-DD_HH-mm\") }}.docx"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        2860,
        1360
      ],
      "id": "be1d627e-2b69-4cab-a286-fab07cb1b487",
      "name": "Create Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $('Create Docs').item.json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('AI Agent').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        3100,
        1360
      ],
      "id": "8a3994aa-96e3-485b-beb4-f1fd7f0a33e6",
      "name": "Insert transcription",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "81ffa2ff-6704-4e03-9e88-bbdb89a9d64b",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4760,
        1360
      ],
      "id": "21244291-046f-4997-ab58-572a4596a432",
      "name": "Approved or declined?"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "bryanfandawa@gmail.com",
        "subject": "Google Docs for Revision",
        "message": "=Please revise the document below.\n\nhttps://docs.google.com/document/d/{{ $('Create Docs').item.json.id }}/edit\n\nOnce edited, please click the approve button.",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        5120,
        1500
      ],
      "id": "256d71e6-de4e-4105-81ca-3db516541519",
      "name": "Approving Email",
      "webhookId": "35801860-0389-415e-b10e-193a19241f37",
      "credentials": {
        "gmailOAuth2": {
          "id": "hAP57FDzlAXnYcco",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "bryanfandawa@gmail.com",
        "subject": "=Sermont Audio {{ $('Create Docs').item.json.name }}",
        "message": "={{ $json.summaryHtml }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        4540,
        1360
      ],
      "id": "0110dedf-3d8c-4328-a0e6-80fb57fd37a8",
      "name": "Approve or Decline",
      "webhookId": "7eefa762-8ba7-4f47-bb81-5e3921759823",
      "credentials": {
        "gmailOAuth2": {
          "id": "hAP57FDzlAXnYcco",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "={{ $('Create Docs').item.json.id }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        5440,
        1340
      ],
      "id": "81b7d4ca-f440-4ea2-8d07-86b7e1020783",
      "name": "Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "church-content",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -380,
        1160
      ],
      "id": "65982c03-8e00-4a36-93f3-80d1a7d0418f",
      "name": "Webhook from Church Content Plugin",
      "webhookId": "9dfdd764-cbc6-4365-a4d2-8c227f2a6eae"
    },
    {
      "parameters": {
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8000,
        1280
      ],
      "id": "2da84c24-c313-4ced-980c-e376e2f12916",
      "name": "HTTP Request4",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7300,
        1280
      ],
      "id": "a3344c07-ac2d-4e6a-960e-5c7fade4f879",
      "name": "Get Docs File1",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const doc = items[0].json;\nconst content = doc.body.content;\nconst targets = ['INTRODUCTION', 'BODY', 'CONCLUSION'];\n\nlet updates = [];\n\nfor (const block of content) {\n  if (!block.paragraph || !block.paragraph.elements) continue;\n  const elements = block.paragraph.elements;\n\n  for (const el of elements) {\n    const text = el.textRun?.content?.trim();\n    if (!text) continue;\n\n    if (targets.includes(text)) {\n      updates.push({\n        updateTextStyle: {\n          range: {\n            startIndex: el.startIndex,\n            endIndex: el.endIndex\n          },\n          textStyle: {\n            bold: true,\n            fontSize: {\n              magnitude: 14,\n              unit: 'PT'\n            }\n          },\n          fields: 'bold,fontSize'\n        }\n      });\n    }\n  }\n}\n\nreturn [{ json: { requests: updates } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7520,
        1280
      ],
      "id": "ad4f05ff-fd30-4e34-a272-baac3ac43d63",
      "name": "Reformat docs file1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://docs.googleapis.com/v1/documents/{{ $('Create Docs').item.json.id }}:batchUpdate",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDocsOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ { \"requests\": $json.requests } }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7760,
        1280
      ],
      "id": "4783010d-159d-45b3-894f-baf8f100b14d",
      "name": "Update docs using the code node1",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const content = items[0].json.body.content;\nlet html = '';\n\nfor (const block of content) {\n  if (!block.paragraph || !block.paragraph.elements) continue;\n\n  for (const el of block.paragraph.elements) {\n    const run = el.textRun;\n    if (!run || !run.content) continue;\n\n    const isBold = run.textStyle?.bold;\n    const text = run.content;\n\n    html += isBold ? `<strong>${text}</strong>` : text;\n  }\n\n  html += '<br>'; // New paragraph\n}\n\nreturn [{ json: { summaryHtml: html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8260,
        1280
      ],
      "id": "905c97be-556f-4cc4-9ead-3ffe9a37cf27",
      "name": "Code1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a Christian writer creating a blog post from a sermon transcript. Your goal is to turn the transcript into a clear, conversational, and engaging reflection that can be published as a separate blog post — not a transcript.\n\nPlease do the following:\n\n1. Write a **summary or devotional-style reflection** based on the core message of the sermon.\n2. Use a **friendly, approachable tone** (like a pastor writing a devotional for everyday readers).\n3. Make the content **keyword-rich** for SEO (use relevant biblical or spiritual search phrases).\n4. Include a **quote** from the sermon that captures the heart of the message.\n5. End with an invitation to listen to the full sermon, using this placeholder:\n   > *Click here to listen to the full sermon.*\n\n**Do not include the entire transcript.** Focus on retelling or reflecting on the key points in a way that’s inspiring and skimmable.\n\nHere is the sermon transcript:\n\n\"\"\"\n{{ $json.content }}\n\"\"\"\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        5660,
        1340
      ],
      "id": "684a7eb7-dd09-4666-a2f0-b82d40dd8938",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        5660,
        1540
      ],
      "id": "e00b4f52-ad8b-4270-8bb5-a57a97706c1a",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "rROhGggv3UKdDt8C",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "folderId": "1MulPPZJBPqNqFPJQnEMJINx6lF-spVc_",
        "title": "=Sermon_{{ $now.format(\"YYYY-MM-DD_HH-mm\") }}_Blogpost.docx"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        6060,
        1340
      ],
      "id": "2cc91a33-2308-4a9b-8c3d-b8b8f8abd61d",
      "name": "Blog Post Document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $('Create Docs').item.json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('AI Agent1').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        6280,
        1340
      ],
      "id": "f6d6a0f1-b7dc-406b-9617-06a5a7775b9e",
      "name": "Insert Blogpost Transcript",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "QIuTsnHnIgcChY2y",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const html = $json.body.post.post_content;\nconst match = html.match(/<audio[^>]+src=\"([^\"]+)\"/);\nconst audioUrl = match ? match[1] : null;\n\nreturn [\n  {\n    json: {\n      audioUrl: audioUrl,\n      title: $json.body.post.post_title,\n      id: $json.body.post.ID\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        1160
      ],
      "id": "e0afb6eb-5d4c-4db9-b56d-11d42530944a",
      "name": "Extract URL"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://whisper-api:9000/asr",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "audio_file",
              "inputDataFieldName": "=data"
            },
            {
              "name": "language",
              "value": "en"
            },
            {
              "name": "task",
              "value": "transcribe"
            }
          ]
        },
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2860,
        1020
      ],
      "id": "f330cca5-d525-44b3-addc-cda0f7b84c85",
      "name": "transcribe",
      "disabled": true
    }
  ],
  "connections": {
    "Aggregate": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Docs File": {
      "main": [
        [
          {
            "node": "Reformat docs file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reformat docs file": {
      "main": [
        [
          {
            "node": "Update docs using the code node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update docs using the code node": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Approve or Decline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List the files downloaded": {
      "main": [
        [
          {
            "node": "Make an array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make an array": {
      "main": [
        [
          {
            "node": "splits array into individual item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "splits array into individual item": {
      "main": [
        [
          {
            "node": "read mp3 as binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "read mp3 as binary": {
      "main": [
        [
          {
            "node": "transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "read mp3 as binary2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "read mp3 as binary2": {
      "main": [
        [
          {
            "node": "transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Information to Google Sheets": {
      "main": [
        [
          {
            "node": "Get File Information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File Information": {
      "main": [
        [
          {
            "node": "Get File Size",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File Size": {
      "main": [
        [
          {
            "node": "Is file bigger than 5mb?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is file bigger than 5mb?": {
      "main": [
        [
          {
            "node": "Get Audio URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio URL": {
      "main": [
        [
          {
            "node": "Cut into chunks and compress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cut into chunks and compress": {
      "main": [
        [
          {
            "node": "List the files downloaded",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Docs": {
      "main": [
        [
          {
            "node": "Insert transcription",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert transcription": {
      "main": [
        [
          {
            "node": "Get Docs File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Approved or declined?": {
      "main": [
        [
          {
            "node": "Google Docs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Approving Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Approving Email": {
      "main": [
        [
          {
            "node": "Google Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Approve or Decline": {
      "main": [
        [
          {
            "node": "Approved or declined?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook from Church Content Plugin": {
      "main": [
        [
          {
            "node": "Extract URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Docs File1": {
      "main": [
        [
          {
            "node": "Reformat docs file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reformat docs file1": {
      "main": [
        [
          {
            "node": "Update docs using the code node1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update docs using the code node1": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Blog Post Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Blog Post Document": {
      "main": [
        [
          {
            "node": "Insert Blogpost Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract URL": {
      "main": [
        [
          {
            "node": "Update Information to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "404da7777b9ae3a6ef4a84e36ff3f6ed18ddf4e223c2dd8f9560a48938216fe2"
  }
}
